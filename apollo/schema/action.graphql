type Action {
  id: ID!
  sensor: Sensor!
  automaticAction: AutomaticAction
  scheduledAction: ScheduledAction
  valueToChangeOn: Int!
  deleted: Boolean
}

input ActionInput {
  id: ID
  sensor: ID!
  automaticAction: ID
  scheduledAction: ID
  valueToChangeOn: Int!
  deleted: Boolean
}

input ActionFilterInput {
  id: StringFilterInput
  sensor: SensorFilterInput
  automaticAction: ID
  scheduledAction: ID
  valueToChangeOn: StringFilterInput
}

extend type Subscription {
  action(filter: ActionFilterInput, sort: String): Action
}

# extend type Query {
#   action(input: ActionInput!, sort: String): Action
# }

# extend type Mutation {
#   action(input: ActionInput!, sort: String): Action
# }
