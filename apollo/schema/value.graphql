type Value {
  id: ID!
  sensor: Sensor!
  value: Int!
  createdAt: Date!
}

input ValueInput {
  id: ID
  sensor: ID
  value: Int
  deleted: Boolean
}

input ValueFilterInput {
  id: ID
  sensor: ID
  createdAt: StringFilterInput
  value: NumberFilterInput
}

input StringFilterInput {
  eq: String
  gt: String
  gte: String
  lt: String
  lte: String
  ne: String
}

input NumberFilterInput {
  eq: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  ne: Int
}

extend type Query {
  value(input: ValueInput!, sort: String): Value
  values(sort: String, filter: ValueFilterInput): [Value] # input: ValueInput!, 
}

extend type Mutation {
  value(input: ValueInput!, sort: String): Value
}
