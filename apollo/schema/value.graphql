type Value {
  id: ID!
  sensor: Sensor!
  value: Int!
  createdAt: Date!
}

input ValueInput {
  id: ID
  sensor: ID
  value: Int
  deleted: Boolean
}

input ValueFilterInput {
  id: ID
  sensor: ID
  createdAt: StringFilterInput
  value: NumberFilterInput
}

extend type Subscription {
  value(filter: ValueInput): Value
}

extend type Query {
  value(input: ValueInput!, sort: String): Value
  values(filter: ValueFilterInput, sort: String): [Value] # input: ValueInput!, 
}

extend type Mutation {
  value(input: ValueInput!, sort: String): Value
}
